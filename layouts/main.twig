{% set networkData = _Network.getNetworkData() %}
{% set blogData = _Blog.getBlog() %}
{{ this.beginPage() }}
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
        <title>{{this.title | raw}}</title>
        {{ Html.csrfMetaTags | raw }}

        <!-- Google Tag Manager -->
        {% if networkData.thirdPartyIntegrations['googleTagManager'] | length > 0 %}
            {{networkData.thirdPartyIntegrations['googleTagManager']['script'] | raw}}
        {% endif %}

        <!-- Favicon Icon -->
        {% set favicon = ''%}
        {% if networkData.favMedia | length > 0 %}
            {% set favicon = _Media.getMediaUrl(networkData.favMedia, 80, 80)%}
        {% endif %}

        {% if favicon != '' %}
            <link rel="shortcut icon" href="{{favicon}}" type="image/x-icon" />
            <link rel="icon" href="{{favicon}}" sizes="any" type="image/svg+xml" />
        {% endif %}
        
        {% set isPage = 'content_box_page' in _Page.getBodyClass() and 'page-contact-us' not in _Page.getBodyClass() %}
		
		{% set bodyClass = _Page.getBodyClass() | replace({('article') : 'article__page'}) %}
        {% set primaryFont = networkData['styling']['fonts']['primaryFont'] %}
        {% set secFont = networkData['styling']['fonts']['secondaryFont'] %}

        {% if primaryFont != "" and secFont != "" and primaryFont == secFont %}
            <link href='https://fonts.googleapis.com/css?family={{primaryFont}}' rel='stylesheet' type='text/css'>
        {% elseif primaryFont != "" %}
            <link href='https://fonts.googleapis.com/css?family={{primaryFont}}' rel='stylesheet' type='text/css'>
            {% if secFont != "" %}
                <link href='https://fonts.googleapis.com/css?family={{secFont}}' rel='stylesheet' type='text/css'>
            {% endif %}
        {% elseif secFont != "" %}
            <link href='https://fonts.googleapis.com/css?family={{secFont}}' rel='stylesheet' type='text/css'>
        {% endif %}
		
        <link rel="home" href="http://{{networkData.defaultDomain['domain']}}" />
        <link rel="alternate" type="application/rss+xml" title="{{_Network.getNetworkTitle()}} -  RSS Feeds" href="http://{{networkData.defaultDomain['domain']}}/feed/rss"/>
        
        {% if _AppHelper.getApplicationEnv() == 'PROD'%}
            <link rel="stylesheet" href="{{networkData.templatePath}}/static/deploy/output.min.css?v=828be641" type="text/css" media="all">
            <link rel="stylesheet" href="{{networkData.templatePath}}/static/deploy/print.min.css" type="text/css" media="print">
        {% else %}
            <link type="text/css" rel="stylesheet" href="{{networkData.templatePath}}/static/js/plugins/jquery.fancybox/source/jquery.fancybox.css" />
            <link type="text/css" rel="stylesheet" href="{{networkData.templatePath}}/static/js/plugins/jquery.noty-2.3.8/demo/animate.css" />
            <link type="text/css" rel="stylesheet" href="{{_AppHelper.getAssetsSDKPath()}}/js/media-player/mediaelementplayer.css" />
            <link rel="stylesheet" href="{{networkData.templatePath}}/static/css/index.css" type="text/css" media="all">
        {% endif %}
        
        {% if isPage %}
            <link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
            <link href="{{_AppHelper.getAssetsStaticPath()}}/dist/vendors/ContentBox/assets/minimalist-basic/content-bootstrap.css" rel="stylesheet" type="text/css" />

            <link href="{{_AppHelper.getAssetsStaticPath()}}/dist/vendors/ContentBox/box/box.css" rel="stylesheet" type="text/css" />
            <link href="{{_AppHelper.getAssetsStaticPath()}}/dist/vendors/ContentBox/contentbuilder/contentbuilder.css" rel="stylesheet" type="text/css" />
            <link href="{{_AppHelper.getAssetsStaticPath()}}/dist/vendors/ContentBox/contentbox/contentbox.css" rel="stylesheet" type="text/css" />
            <link rel="stylesheet" href="{{networkData.templatePath}}/static/css/contentbox-breakup.css?rel=1499240893786" type="text/css" media="all" />
        {% endif %}
        <link href="https://fonts.googleapis.com/css?family=Karla:400,700|Yantramanav:300,400,500,700,900" rel="stylesheet">
        <style>
            body, .body, p, a.header__navigation-link {
                font-family: "Yantramanav", sans-serif;
            }
            h1, h2, h3, h4, h5 {
                font-family: "Yantramanav", serif !important;
            }
            .article p, .article li, figcaption {
                font-family: 'Karla', sans-serif;
            }
            @font-face {
                font-family: 'Futura-Bold';
                src: url('/static/fonts/Futura-Bold.ttf');
            }
            @media print {
                header, footer, .article__header, .article__image_container, .article__info_container, .header, .article__social-links {
                    display: none !important;
                }
            }
        </style>
        
        {% set themeColors = networkData['styling']['colours'] %}
        
        <style type="text/css">
        {% if primaryFont != "" %}
            body, .body, p, .footer__additional-link, .footer__copyright, .article p, .article li, figcaption, .blog__author-bio {
                font-family: "{{primaryFont | replace({'+': ' '})}}" !important;
            }
        {% endif %}
        {% if secFont != "" %}
            h1, h2, h3, h4, h5, .header__navigation-link, .article__headline, .blog__headline, .contact__header_overlay, .static-page__related-title {
                font-family: "{{secFont | replace({'+': ' '})}}" !important;
            }
        {% endif %}
        {% if themeColors.linkColor != "" %}
            a {
                color: {{themeColors.linkColor}} !important;
            }
        {% endif %}
        {% if themeColors.linkHoverColor != "" %}
            a:hover {
                color: {{themeColors.linkHoverColor}} !important;
            }
        {% endif %}
        {% if themeColors.headingColor != "" %}
            h1, h2, h3, h4, h5, h6, .article__headline, .blog__headline, .contact__header_overlay, .static-page__related-title {
                color: {{themeColors.headingColor}} !important;
            }
        {% endif %}
            
        {% if themeColors.navigationActiveColor != "" %}
            .header__navigation_link.active {
                color: {{themeColors.navigationActiveColor}} !important;
            }
        {% endif %}
        {% if themeColors.navigationBgColor != "" %}
        .header__content {
            background-color: {{themeColors.navigationBgColor}} !important;
        }
        {% endif %}
        
        {% if themeColors.footerBgColor != "" %}
        .footer {
            background-color: {{themeColors.footerBgColor}} !important;
        }
        {% endif %}
        {% if themeColors.pageBgColor != "" %}
        .body {
            background-color: {{themeColors.pageBgColor}} !important;
        }
        {% endif %}
        
        {% if themeColors.navigationColor != "" %}
            .header__navigation_link, .footer__navigation_link, .header__navigation_more, .footer__navigation_more {
                color: {{themeColors.navigationColor}} !important;
            }
        {% endif %}
        
        
        {% if themeColors.navigationHoverColor != "" %}
            .header__navigation_link:hover, .footer__navigation_link:hover, .header__navigation_more:hover, .footer__navigation_more:hover  {
                color: {{themeColors.navigationHoverColor}} !important;
            }
        {% endif %}

        {% set customCss = networkData['styling']['customStyleSheet'] %}
        {% if customCss != "" %}
                {{customCss | raw }}
        {% endif %}
        
        </style>
        
        {% if blogData.settings['GoogleAnalyticsID'] is defined and  blogData.settings['GoogleAnalyticsID'] is not empty  %}
            <!-- Google Analytics -->
            <script>
                (function (i, s, o, g, r, a, m) {
                    i['GoogleAnalyticsObject'] = r;
                    i[r] = i[r] || function () {
                        (i[r].q = i[r].q || []).push(arguments)
                    }, i[r].l = 1 * new Date();
                    a = s.createElement(o),
                            m = s.getElementsByTagName(o)[0];
                    a.async = 1;
                    a.src = g;
                    m.parentNode.insertBefore(a, m)
                })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');

                ga('create', '{{blogData.settings['GoogleAnalyticsID']}}', 'auto');
                ga('send', 'pageview');
            </script>
            <!-- End Google Analytics -->
        {% endif %}
        {{ this.head() }}
    </head>

    <body class="body {{bodyClass}}">
        {{ this.beginBody() }}

        <!-- Google Tag Manager(noscript) -->
        {% if networkData.thirdPartyIntegrations['googleTagManager'] | length > 0 %}
            {{networkData.thirdPartyIntegrations['googleTagManager']['noscript'] | raw}}
        {% endif %}
        <div id="container">

            {{ this.render('partials/_header.twig', {network: networkData, blogData: blogData}) | raw }}
            {% if this.params['search'] is defined and this.params['search'] == true %}
                <div class="header-theme-color"></div>
            {% endif %}
            <main id="content" role="main">
                {{ content | raw}}
            </main>
            <div class="modal" role="dialog">
                <div class="modal-dialog modal-extlg" role="document">
                    <div class="modal-content social-modal">
                    </div>
                </div>
            </div>
            {{ this.render('partials/_footer.twig', {network : networkData, blogData: blogData}) | raw }}
        </div>
        <div id="popup-overlay"></div>
        {{this.render('partials/account-modal.twig',{network : networkData}) | raw }}
        {{ this.render('partials/_javascript.twig', {networkData : networkData}) | raw }}
        <div class="SwappingHelper" style="display:none">
            <div style="width: 270px; height: 105px; padding: 3px; background-color: #FFF; max-width: 270px; max-height: 105px; overflow: hidden; z-index: 999 !important;">
                <img class="article-image" src="{{networkData.placeHolder100x100}}" style="width:97px; height: 97px; float: left;" />
                <p class="article-text" style="width: 165px; float: left; padding-left: 3px;color: #394659;font-size: 14px; font-family: Droid Serif,serif; line-height: 20px; margin-top:0px;">Dummy text  </p>
            </div>
        </div>
        <script src='https://www.google.com/recaptcha/api.js'></script>
        <script src="//cdn.trackduck.com/toolbar/prod/td.js" async data-trackduck-id="5853753be18ef12554491749"></script>
        {{ this.endBody() }}
    </body>
</html>
{{ this.endPage() }}